version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - choregarden-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
    depends_on:
      - database
    networks:
      - choregarden-network
    env_file:
      - ./.env

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - choregarden-data:/var/lib/postgresql/data
    command: >
      sh -c "
      docker-entrypoint.sh postgres &
      sleep 5 &&
      echo \"Checking if role '${APP_DB_USER}' exists...\" &&
      if ! psql -U ${POSTGRES_USER} -d postgres -tc \"SELECT 1 FROM pg_roles WHERE rolname='${APP_DB_USER}';\" | grep -q 1; then
        echo \"Creating role '${APP_DB_USER}'...\" &&
        psql -U ${POSTGRES_USER} -d postgres -c \"CREATE USER ${APP_DB_USER} WITH PASSWORD '${APP_DB_PASSWORD}';\";
      fi &&
      echo \"Checking if database '${POSTGRES_DB}' exists...\" &&
      if ! psql -U ${POSTGRES_USER} -d postgres -tc \"SELECT 1 FROM pg_database WHERE datname='${POSTGRES_DB}';\" | grep -q 1; then
        echo \"Creating database '${POSTGRES_DB}'...\" &&
        psql -U ${POSTGRES_USER} -d postgres -c \"CREATE DATABASE ${POSTGRES_DB};\";
      fi &&
      echo \"Granting privileges on database '${POSTGRES_DB}' to '${APP_DB_USER}'...\" &&
      psql -U ${POSTGRES_USER} -d postgres -c \"GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO ${APP_DB_USER};\" &&
      wait
      "
    ports:
      - "5432:5432"
    networks:
      - choregarden-network
    env_file:
      - ./.env

volumes:
  choregarden-data:

networks:
  choregarden-network:
    driver: bridge